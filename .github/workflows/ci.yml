name: Azure CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch

permissions:
  id-token: write  # Permission to request an ID token for OIDC authentication (needed for Azure login)
  contents: read   # Permission to read repository contents

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use Ubuntu runner for CI/CD process

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (if you are using Node.js or React for your app)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Adjust if you're using a different version of Node.js

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the app (for React or Node.js apps)
      - name: Build app
        run: npm run build  # Adjust build command according to your app type

      # Step 5: Azure login using Service Principal credentials from AZURE_CREDENTIALS secret
      - name: Azure login with Service Principal
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Reference to the AZURE_CREDENTIALS secret

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t my-app .  # Replace 'my-app' with your Docker image name

      # Step 7: Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name ${{ secrets.AZURE_ACR_NAME }}  # Name of your Azure Container Registry

      # Step 8: Tag Docker image
      - name: Tag Docker image
        run: docker tag my-app:latest ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-app:latest

      # Step 9: Push Docker image to ACR
      - name: Push Docker image to ACR
        run: docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-app:latest

      # Step 10: Deploy Docker image to Azure Container Apps
      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name githubmyapp \
            --resource-group githubmyapp \
            --image ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-app:latest \
            --cpu 1 --memory 2Gi \
            --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
